
motor_testbench.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000460  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005f4  080005fc  000105fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005f4  080005f4  000105fc  2**0
                  CONTENTS
  4 .ARM          00000000  080005f4  080005f4  000105fc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005f4  080005fc  000105fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005f4  080005f4  000105f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005f8  080005f8  000105f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000105fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080005fc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080005fc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000105fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000085d  00000000  00000000  00010626  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000212  00000000  00000000  00010e83  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00011098  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00011150  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000012d8  00000000  00000000  000111e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000bac  00000000  00000000  000124b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00004ecd  00000000  00000000  00013064  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00017f31  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  00017f84  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080005dc 	.word	0x080005dc

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080005dc 	.word	0x080005dc

080001d4 <GPIO_PCLK>:
 * @param[in]			- Enable or Disable	macros
 * @return				- none
 * @Note				- none
 */
void GPIO_PCLK(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
 80001dc:	460b      	mov	r3, r1
 80001de:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001e0:	78fb      	ldrb	r3, [r7, #3]
 80001e2:	2b01      	cmp	r3, #1
 80001e4:	d141      	bne.n	800026a <GPIO_PCLK+0x96>
	{
		if(pGPIOx == GPIOA)
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a43      	ldr	r2, [pc, #268]	; (80002f8 <GPIO_PCLK+0x124>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d106      	bne.n	80001fc <GPIO_PCLK+0x28>
		{
			GPIOA_PCLK_EN();
 80001ee:	4b43      	ldr	r3, [pc, #268]	; (80002fc <GPIO_PCLK+0x128>)
 80001f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f2:	4a42      	ldr	r2, [pc, #264]	; (80002fc <GPIO_PCLK+0x128>)
 80001f4:	f043 0301 	orr.w	r3, r3, #1
 80001f8:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOH_PCLK_DI();
		}

	}
}
 80001fa:	e077      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOB)
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	4a40      	ldr	r2, [pc, #256]	; (8000300 <GPIO_PCLK+0x12c>)
 8000200:	4293      	cmp	r3, r2
 8000202:	d106      	bne.n	8000212 <GPIO_PCLK+0x3e>
			GPIOB_PCLK_EN();
 8000204:	4b3d      	ldr	r3, [pc, #244]	; (80002fc <GPIO_PCLK+0x128>)
 8000206:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000208:	4a3c      	ldr	r2, [pc, #240]	; (80002fc <GPIO_PCLK+0x128>)
 800020a:	f043 0302 	orr.w	r3, r3, #2
 800020e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000210:	e06c      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOC)
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	4a3b      	ldr	r2, [pc, #236]	; (8000304 <GPIO_PCLK+0x130>)
 8000216:	4293      	cmp	r3, r2
 8000218:	d106      	bne.n	8000228 <GPIO_PCLK+0x54>
			GPIOC_PCLK_EN();
 800021a:	4b38      	ldr	r3, [pc, #224]	; (80002fc <GPIO_PCLK+0x128>)
 800021c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021e:	4a37      	ldr	r2, [pc, #220]	; (80002fc <GPIO_PCLK+0x128>)
 8000220:	f043 0304 	orr.w	r3, r3, #4
 8000224:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000226:	e061      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOD)
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	4a37      	ldr	r2, [pc, #220]	; (8000308 <GPIO_PCLK+0x134>)
 800022c:	4293      	cmp	r3, r2
 800022e:	d106      	bne.n	800023e <GPIO_PCLK+0x6a>
			GPIOD_PCLK_EN();
 8000230:	4b32      	ldr	r3, [pc, #200]	; (80002fc <GPIO_PCLK+0x128>)
 8000232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000234:	4a31      	ldr	r2, [pc, #196]	; (80002fc <GPIO_PCLK+0x128>)
 8000236:	f043 0308 	orr.w	r3, r3, #8
 800023a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023c:	e056      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOE)
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	4a32      	ldr	r2, [pc, #200]	; (800030c <GPIO_PCLK+0x138>)
 8000242:	4293      	cmp	r3, r2
 8000244:	d106      	bne.n	8000254 <GPIO_PCLK+0x80>
			GPIOE_PCLK_EN();
 8000246:	4b2d      	ldr	r3, [pc, #180]	; (80002fc <GPIO_PCLK+0x128>)
 8000248:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024a:	4a2c      	ldr	r2, [pc, #176]	; (80002fc <GPIO_PCLK+0x128>)
 800024c:	f043 0310 	orr.w	r3, r3, #16
 8000250:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000252:	e04b      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOH)
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	4a2e      	ldr	r2, [pc, #184]	; (8000310 <GPIO_PCLK+0x13c>)
 8000258:	4293      	cmp	r3, r2
 800025a:	d147      	bne.n	80002ec <GPIO_PCLK+0x118>
			GPIOH_PCLK_EN();
 800025c:	4b27      	ldr	r3, [pc, #156]	; (80002fc <GPIO_PCLK+0x128>)
 800025e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000260:	4a26      	ldr	r2, [pc, #152]	; (80002fc <GPIO_PCLK+0x128>)
 8000262:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000266:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000268:	e040      	b.n	80002ec <GPIO_PCLK+0x118>
		if(pGPIOx == GPIOA)
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	4a22      	ldr	r2, [pc, #136]	; (80002f8 <GPIO_PCLK+0x124>)
 800026e:	4293      	cmp	r3, r2
 8000270:	d106      	bne.n	8000280 <GPIO_PCLK+0xac>
			GPIOA_PCLK_DI();
 8000272:	4b22      	ldr	r3, [pc, #136]	; (80002fc <GPIO_PCLK+0x128>)
 8000274:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000276:	4a21      	ldr	r2, [pc, #132]	; (80002fc <GPIO_PCLK+0x128>)
 8000278:	f023 0301 	bic.w	r3, r3, #1
 800027c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027e:	e035      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOB)
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	4a1f      	ldr	r2, [pc, #124]	; (8000300 <GPIO_PCLK+0x12c>)
 8000284:	4293      	cmp	r3, r2
 8000286:	d106      	bne.n	8000296 <GPIO_PCLK+0xc2>
			GPIOB_PCLK_DI();
 8000288:	4b1c      	ldr	r3, [pc, #112]	; (80002fc <GPIO_PCLK+0x128>)
 800028a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028c:	4a1b      	ldr	r2, [pc, #108]	; (80002fc <GPIO_PCLK+0x128>)
 800028e:	f023 0302 	bic.w	r3, r3, #2
 8000292:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000294:	e02a      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOC)
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a1a      	ldr	r2, [pc, #104]	; (8000304 <GPIO_PCLK+0x130>)
 800029a:	4293      	cmp	r3, r2
 800029c:	d106      	bne.n	80002ac <GPIO_PCLK+0xd8>
			GPIOC_PCLK_DI();
 800029e:	4b17      	ldr	r3, [pc, #92]	; (80002fc <GPIO_PCLK+0x128>)
 80002a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a2:	4a16      	ldr	r2, [pc, #88]	; (80002fc <GPIO_PCLK+0x128>)
 80002a4:	f023 0304 	bic.w	r3, r3, #4
 80002a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002aa:	e01f      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOD)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4a16      	ldr	r2, [pc, #88]	; (8000308 <GPIO_PCLK+0x134>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d106      	bne.n	80002c2 <GPIO_PCLK+0xee>
			GPIOD_PCLK_DI();
 80002b4:	4b11      	ldr	r3, [pc, #68]	; (80002fc <GPIO_PCLK+0x128>)
 80002b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b8:	4a10      	ldr	r2, [pc, #64]	; (80002fc <GPIO_PCLK+0x128>)
 80002ba:	f023 0308 	bic.w	r3, r3, #8
 80002be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c0:	e014      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOE)
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a11      	ldr	r2, [pc, #68]	; (800030c <GPIO_PCLK+0x138>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d106      	bne.n	80002d8 <GPIO_PCLK+0x104>
			GPIOE_PCLK_DI();
 80002ca:	4b0c      	ldr	r3, [pc, #48]	; (80002fc <GPIO_PCLK+0x128>)
 80002cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ce:	4a0b      	ldr	r2, [pc, #44]	; (80002fc <GPIO_PCLK+0x128>)
 80002d0:	f023 0310 	bic.w	r3, r3, #16
 80002d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d6:	e009      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOH)
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	4a0d      	ldr	r2, [pc, #52]	; (8000310 <GPIO_PCLK+0x13c>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	d105      	bne.n	80002ec <GPIO_PCLK+0x118>
			GPIOH_PCLK_DI();
 80002e0:	4b06      	ldr	r3, [pc, #24]	; (80002fc <GPIO_PCLK+0x128>)
 80002e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e4:	4a05      	ldr	r2, [pc, #20]	; (80002fc <GPIO_PCLK+0x128>)
 80002e6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80002ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ec:	bf00      	nop
 80002ee:	370c      	adds	r7, #12
 80002f0:	46bd      	mov	sp, r7
 80002f2:	bc80      	pop	{r7}
 80002f4:	4770      	bx	lr
 80002f6:	bf00      	nop
 80002f8:	40020000 	.word	0x40020000
 80002fc:	40023800 	.word	0x40023800
 8000300:	40020400 	.word	0x40020400
 8000304:	40020800 	.word	0x40020800
 8000308:	40020c00 	.word	0x40020c00
 800030c:	40021000 	.word	0x40021000
 8000310:	40021c00 	.word	0x40021c00

08000314 <GPIO_Init>:
 * @param[in]			-
 * @return				- none
 * @Note				- none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000314:	b480      	push	{r7}
 8000316:	b085      	sub	sp, #20
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;	//temp register
 800031c:	2300      	movs	r3, #0
 800031e:	60fb      	str	r3, [r7, #12]

	//1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	795b      	ldrb	r3, [r3, #5]
 8000324:	2b03      	cmp	r3, #3
 8000326:	d81f      	bhi.n	8000368 <GPIO_Init+0x54>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	795b      	ldrb	r3, [r3, #5]
 800032c:	461a      	mov	r2, r3
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	791b      	ldrb	r3, [r3, #4]
 8000332:	005b      	lsls	r3, r3, #1
 8000334:	fa02 f303 	lsl.w	r3, r2, r3
 8000338:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 <<( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)) ;
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	681a      	ldr	r2, [r3, #0]
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	791b      	ldrb	r3, [r3, #4]
 8000344:	005b      	lsls	r3, r3, #1
 8000346:	2103      	movs	r1, #3
 8000348:	fa01 f303 	lsl.w	r3, r1, r3
 800034c:	43db      	mvns	r3, r3
 800034e:	4619      	mov	r1, r3
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	400a      	ands	r2, r1
 8000356:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	6819      	ldr	r1, [r3, #0]
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	68fa      	ldr	r2, [r7, #12]
 8000364:	430a      	orrs	r2, r1
 8000366:	601a      	str	r2, [r3, #0]
	}else
	{
		//TODO:implement Interrupt Mode
	}
	temp = 0;
 8000368:	2300      	movs	r3, #0
 800036a:	60fb      	str	r3, [r7, #12]

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	799b      	ldrb	r3, [r3, #6]
 8000370:	461a      	mov	r2, r3
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	791b      	ldrb	r3, [r3, #4]
 8000376:	005b      	lsls	r3, r3, #1
 8000378:	fa02 f303 	lsl.w	r3, r2, r3
 800037c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)) ;
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	689a      	ldr	r2, [r3, #8]
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	791b      	ldrb	r3, [r3, #4]
 8000388:	005b      	lsls	r3, r3, #1
 800038a:	2103      	movs	r1, #3
 800038c:	fa01 f303 	lsl.w	r3, r1, r3
 8000390:	43db      	mvns	r3, r3
 8000392:	4619      	mov	r1, r3
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	400a      	ands	r2, r1
 800039a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	6899      	ldr	r1, [r3, #8]
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	68fa      	ldr	r2, [r7, #12]
 80003a8:	430a      	orrs	r2, r1
 80003aa:	609a      	str	r2, [r3, #8]
	temp = 0;
 80003ac:	2300      	movs	r3, #0
 80003ae:	60fb      	str	r3, [r7, #12]

	//3.configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	79db      	ldrb	r3, [r3, #7]
 80003b4:	461a      	mov	r2, r3
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	791b      	ldrb	r3, [r3, #4]
 80003ba:	005b      	lsls	r3, r3, #1
 80003bc:	fa02 f303 	lsl.w	r3, r2, r3
 80003c0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)) ;
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	68da      	ldr	r2, [r3, #12]
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	791b      	ldrb	r3, [r3, #4]
 80003cc:	005b      	lsls	r3, r3, #1
 80003ce:	2103      	movs	r1, #3
 80003d0:	fa01 f303 	lsl.w	r3, r1, r3
 80003d4:	43db      	mvns	r3, r3
 80003d6:	4619      	mov	r1, r3
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	400a      	ands	r2, r1
 80003de:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	68d9      	ldr	r1, [r3, #12]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	68fa      	ldr	r2, [r7, #12]
 80003ec:	430a      	orrs	r2, r1
 80003ee:	60da      	str	r2, [r3, #12]
	temp = 0;
 80003f0:	2300      	movs	r3, #0
 80003f2:	60fb      	str	r3, [r7, #12]

	//4.configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	7a1b      	ldrb	r3, [r3, #8]
 80003f8:	461a      	mov	r2, r3
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	791b      	ldrb	r3, [r3, #4]
 80003fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000402:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	685a      	ldr	r2, [r3, #4]
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	791b      	ldrb	r3, [r3, #4]
 800040e:	4619      	mov	r1, r3
 8000410:	2301      	movs	r3, #1
 8000412:	408b      	lsls	r3, r1
 8000414:	43db      	mvns	r3, r3
 8000416:	4619      	mov	r1, r3
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	400a      	ands	r2, r1
 800041e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	6859      	ldr	r1, [r3, #4]
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	68fa      	ldr	r2, [r7, #12]
 800042c:	430a      	orrs	r2, r1
 800042e:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000430:	2300      	movs	r3, #0
 8000432:	60fb      	str	r3, [r7, #12]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTFN)
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	7a5b      	ldrb	r3, [r3, #9]
 8000438:	2b02      	cmp	r3, #2
 800043a:	d131      	bne.n	80004a0 <GPIO_Init+0x18c>
	{
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	791b      	ldrb	r3, [r3, #4]
 8000440:	08db      	lsrs	r3, r3, #3
 8000442:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	791b      	ldrb	r3, [r3, #4]
 8000448:	f003 0307 	and.w	r3, r3, #7
 800044c:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF << (4 * temp2)) ;
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	7afa      	ldrb	r2, [r7, #11]
 8000454:	3208      	adds	r2, #8
 8000456:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800045a:	7abb      	ldrb	r3, [r7, #10]
 800045c:	009b      	lsls	r3, r3, #2
 800045e:	220f      	movs	r2, #15
 8000460:	fa02 f303 	lsl.w	r3, r2, r3
 8000464:	43db      	mvns	r3, r3
 8000466:	4618      	mov	r0, r3
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	7afa      	ldrb	r2, [r7, #11]
 800046e:	4001      	ands	r1, r0
 8000470:	3208      	adds	r2, #8
 8000472:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	7afa      	ldrb	r2, [r7, #11]
 800047c:	3208      	adds	r2, #8
 800047e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	7a5b      	ldrb	r3, [r3, #9]
 8000486:	461a      	mov	r2, r3
 8000488:	7abb      	ldrb	r3, [r7, #10]
 800048a:	009b      	lsls	r3, r3, #2
 800048c:	fa02 f303 	lsl.w	r3, r2, r3
 8000490:	4618      	mov	r0, r3
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	7afa      	ldrb	r2, [r7, #11]
 8000498:	4301      	orrs	r1, r0
 800049a:	3208      	adds	r2, #8
 800049c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80004a0:	bf00      	nop
 80004a2:	3714      	adds	r7, #20
 80004a4:	46bd      	mov	sp, r7
 80004a6:	bc80      	pop	{r7}
 80004a8:	4770      	bx	lr

080004aa <GPIO_Toggle>:
 * @return				-
 * @Note				-
 */

void GPIO_Toggle(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80004aa:	b480      	push	{r7}
 80004ac:	b083      	sub	sp, #12
 80004ae:	af00      	add	r7, sp, #0
 80004b0:	6078      	str	r0, [r7, #4]
 80004b2:	460b      	mov	r3, r1
 80004b4:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	695b      	ldr	r3, [r3, #20]
 80004ba:	78fa      	ldrb	r2, [r7, #3]
 80004bc:	2101      	movs	r1, #1
 80004be:	fa01 f202 	lsl.w	r2, r1, r2
 80004c2:	405a      	eors	r2, r3
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	615a      	str	r2, [r3, #20]
}
 80004c8:	bf00      	nop
 80004ca:	370c      	adds	r7, #12
 80004cc:	46bd      	mov	sp, r7
 80004ce:	bc80      	pop	{r7}
 80004d0:	4770      	bx	lr
	...

080004d4 <delay>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void delay(void)
{
 80004d4:	b480      	push	{r7}
 80004d6:	b083      	sub	sp, #12
 80004d8:	af00      	add	r7, sp, #0
	for(uint32_t i =0; i < 1000000;i++);
 80004da:	2300      	movs	r3, #0
 80004dc:	607b      	str	r3, [r7, #4]
 80004de:	e002      	b.n	80004e6 <delay+0x12>
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	3301      	adds	r3, #1
 80004e4:	607b      	str	r3, [r7, #4]
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	4a04      	ldr	r2, [pc, #16]	; (80004fc <delay+0x28>)
 80004ea:	4293      	cmp	r3, r2
 80004ec:	d9f8      	bls.n	80004e0 <delay+0xc>
}
 80004ee:	bf00      	nop
 80004f0:	bf00      	nop
 80004f2:	370c      	adds	r7, #12
 80004f4:	46bd      	mov	sp, r7
 80004f6:	bc80      	pop	{r7}
 80004f8:	4770      	bx	lr
 80004fa:	bf00      	nop
 80004fc:	000f423f 	.word	0x000f423f

08000500 <main>:

int main(void)
{
 8000500:	b580      	push	{r7, lr}
 8000502:	b084      	sub	sp, #16
 8000504:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLED;
	GPIOLED.pGPIOx = GPIOA;
 8000506:	4b0d      	ldr	r3, [pc, #52]	; (800053c <main+0x3c>)
 8000508:	607b      	str	r3, [r7, #4]
	GPIOLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800050a:	2305      	movs	r3, #5
 800050c:	723b      	strb	r3, [r7, #8]
	GPIOLED.GPIO_PinConfig.GPIO_PinMode =GPIO_MODE_OUT;
 800050e:	2301      	movs	r3, #1
 8000510:	727b      	strb	r3, [r7, #9]
	GPIOLED.GPIO_PinConfig.GPIO_PinSpeed =GPIO_SPEED_LOW;
 8000512:	2300      	movs	r3, #0
 8000514:	72bb      	strb	r3, [r7, #10]
	GPIOLED.GPIO_PinConfig.GPIO_PinOPType =GPIO_OP_TYPE_PP;
 8000516:	2300      	movs	r3, #0
 8000518:	733b      	strb	r3, [r7, #12]
	GPIOLED.GPIO_PinConfig.GPIO_PinPuPdControl =GPIO_NO_PUPD;
 800051a:	2300      	movs	r3, #0
 800051c:	72fb      	strb	r3, [r7, #11]

	GPIO_PCLK(GPIOA, ENABLE);
 800051e:	2101      	movs	r1, #1
 8000520:	4806      	ldr	r0, [pc, #24]	; (800053c <main+0x3c>)
 8000522:	f7ff fe57 	bl	80001d4 <GPIO_PCLK>
	GPIO_Init(&GPIOLED);
 8000526:	1d3b      	adds	r3, r7, #4
 8000528:	4618      	mov	r0, r3
 800052a:	f7ff fef3 	bl	8000314 <GPIO_Init>

	while(1)
	{
		GPIO_Toggle(GPIOA, GPIO_PIN_NO_5);
 800052e:	2105      	movs	r1, #5
 8000530:	4802      	ldr	r0, [pc, #8]	; (800053c <main+0x3c>)
 8000532:	f7ff ffba 	bl	80004aa <GPIO_Toggle>
		delay();
 8000536:	f7ff ffcd 	bl	80004d4 <delay>
		GPIO_Toggle(GPIOA, GPIO_PIN_NO_5);
 800053a:	e7f8      	b.n	800052e <main+0x2e>
 800053c:	40020000 	.word	0x40020000

08000540 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000540:	480d      	ldr	r0, [pc, #52]	; (8000578 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000542:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000544:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000548:	480c      	ldr	r0, [pc, #48]	; (800057c <LoopForever+0x6>)
  ldr r1, =_edata
 800054a:	490d      	ldr	r1, [pc, #52]	; (8000580 <LoopForever+0xa>)
  ldr r2, =_sidata
 800054c:	4a0d      	ldr	r2, [pc, #52]	; (8000584 <LoopForever+0xe>)
  movs r3, #0
 800054e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000550:	e002      	b.n	8000558 <LoopCopyDataInit>

08000552 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000552:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000554:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000556:	3304      	adds	r3, #4

08000558 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000558:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800055a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800055c:	d3f9      	bcc.n	8000552 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800055e:	4a0a      	ldr	r2, [pc, #40]	; (8000588 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000560:	4c0a      	ldr	r4, [pc, #40]	; (800058c <LoopForever+0x16>)
  movs r3, #0
 8000562:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000564:	e001      	b.n	800056a <LoopFillZerobss>

08000566 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000566:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000568:	3204      	adds	r2, #4

0800056a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800056a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800056c:	d3fb      	bcc.n	8000566 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800056e:	f000 f811 	bl	8000594 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000572:	f7ff ffc5 	bl	8000500 <main>

08000576 <LoopForever>:

LoopForever:
    b LoopForever
 8000576:	e7fe      	b.n	8000576 <LoopForever>
  ldr   r0, =_estack
 8000578:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800057c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000580:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000584:	080005fc 	.word	0x080005fc
  ldr r2, =_sbss
 8000588:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800058c:	2000001c 	.word	0x2000001c

08000590 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000590:	e7fe      	b.n	8000590 <ADC_IRQHandler>
	...

08000594 <__libc_init_array>:
 8000594:	b570      	push	{r4, r5, r6, lr}
 8000596:	4d0d      	ldr	r5, [pc, #52]	; (80005cc <__libc_init_array+0x38>)
 8000598:	4c0d      	ldr	r4, [pc, #52]	; (80005d0 <__libc_init_array+0x3c>)
 800059a:	1b64      	subs	r4, r4, r5
 800059c:	10a4      	asrs	r4, r4, #2
 800059e:	2600      	movs	r6, #0
 80005a0:	42a6      	cmp	r6, r4
 80005a2:	d109      	bne.n	80005b8 <__libc_init_array+0x24>
 80005a4:	4d0b      	ldr	r5, [pc, #44]	; (80005d4 <__libc_init_array+0x40>)
 80005a6:	4c0c      	ldr	r4, [pc, #48]	; (80005d8 <__libc_init_array+0x44>)
 80005a8:	f000 f818 	bl	80005dc <_init>
 80005ac:	1b64      	subs	r4, r4, r5
 80005ae:	10a4      	asrs	r4, r4, #2
 80005b0:	2600      	movs	r6, #0
 80005b2:	42a6      	cmp	r6, r4
 80005b4:	d105      	bne.n	80005c2 <__libc_init_array+0x2e>
 80005b6:	bd70      	pop	{r4, r5, r6, pc}
 80005b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80005bc:	4798      	blx	r3
 80005be:	3601      	adds	r6, #1
 80005c0:	e7ee      	b.n	80005a0 <__libc_init_array+0xc>
 80005c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80005c6:	4798      	blx	r3
 80005c8:	3601      	adds	r6, #1
 80005ca:	e7f2      	b.n	80005b2 <__libc_init_array+0x1e>
 80005cc:	080005f4 	.word	0x080005f4
 80005d0:	080005f4 	.word	0x080005f4
 80005d4:	080005f4 	.word	0x080005f4
 80005d8:	080005f8 	.word	0x080005f8

080005dc <_init>:
 80005dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005de:	bf00      	nop
 80005e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005e2:	bc08      	pop	{r3}
 80005e4:	469e      	mov	lr, r3
 80005e6:	4770      	bx	lr

080005e8 <_fini>:
 80005e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ea:	bf00      	nop
 80005ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005ee:	bc08      	pop	{r3}
 80005f0:	469e      	mov	lr, r3
 80005f2:	4770      	bx	lr
