
motor_testbench.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000624  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007b8  080007c0  000107c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007b8  080007b8  000107c0  2**0
                  CONTENTS
  4 .ARM          00000000  080007b8  080007b8  000107c0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007b8  080007c0  000107c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007b8  080007b8  000107b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080007bc  080007bc  000107bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000107c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007c0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007c0  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000107c0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009c7  00000000  00000000  000107ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000025b  00000000  00000000  000111b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00011410  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  000114d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000013a7  00000000  00000000  00011568  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000da5  00000000  00000000  0001290f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000531d  00000000  00000000  000136b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000189d1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  00018a24  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080007a0 	.word	0x080007a0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080007a0 	.word	0x080007a0

080001d4 <GPIO_PCLK>:
 * @param[in]			- Enable or Disable	macros
 * @return				- none
 * @Note				- none
 */
void GPIO_PCLK(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
 80001dc:	460b      	mov	r3, r1
 80001de:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001e0:	78fb      	ldrb	r3, [r7, #3]
 80001e2:	2b01      	cmp	r3, #1
 80001e4:	d141      	bne.n	800026a <GPIO_PCLK+0x96>
	{
		if(pGPIOx == GPIOA)
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a43      	ldr	r2, [pc, #268]	; (80002f8 <GPIO_PCLK+0x124>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d106      	bne.n	80001fc <GPIO_PCLK+0x28>
		{
			GPIOA_PCLK_EN();
 80001ee:	4b43      	ldr	r3, [pc, #268]	; (80002fc <GPIO_PCLK+0x128>)
 80001f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f2:	4a42      	ldr	r2, [pc, #264]	; (80002fc <GPIO_PCLK+0x128>)
 80001f4:	f043 0301 	orr.w	r3, r3, #1
 80001f8:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOH_PCLK_DI();
		}

	}
}
 80001fa:	e077      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOB)
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	4a40      	ldr	r2, [pc, #256]	; (8000300 <GPIO_PCLK+0x12c>)
 8000200:	4293      	cmp	r3, r2
 8000202:	d106      	bne.n	8000212 <GPIO_PCLK+0x3e>
			GPIOB_PCLK_EN();
 8000204:	4b3d      	ldr	r3, [pc, #244]	; (80002fc <GPIO_PCLK+0x128>)
 8000206:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000208:	4a3c      	ldr	r2, [pc, #240]	; (80002fc <GPIO_PCLK+0x128>)
 800020a:	f043 0302 	orr.w	r3, r3, #2
 800020e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000210:	e06c      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOC)
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	4a3b      	ldr	r2, [pc, #236]	; (8000304 <GPIO_PCLK+0x130>)
 8000216:	4293      	cmp	r3, r2
 8000218:	d106      	bne.n	8000228 <GPIO_PCLK+0x54>
			GPIOC_PCLK_EN();
 800021a:	4b38      	ldr	r3, [pc, #224]	; (80002fc <GPIO_PCLK+0x128>)
 800021c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021e:	4a37      	ldr	r2, [pc, #220]	; (80002fc <GPIO_PCLK+0x128>)
 8000220:	f043 0304 	orr.w	r3, r3, #4
 8000224:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000226:	e061      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOD)
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	4a37      	ldr	r2, [pc, #220]	; (8000308 <GPIO_PCLK+0x134>)
 800022c:	4293      	cmp	r3, r2
 800022e:	d106      	bne.n	800023e <GPIO_PCLK+0x6a>
			GPIOD_PCLK_EN();
 8000230:	4b32      	ldr	r3, [pc, #200]	; (80002fc <GPIO_PCLK+0x128>)
 8000232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000234:	4a31      	ldr	r2, [pc, #196]	; (80002fc <GPIO_PCLK+0x128>)
 8000236:	f043 0308 	orr.w	r3, r3, #8
 800023a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023c:	e056      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOE)
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	4a32      	ldr	r2, [pc, #200]	; (800030c <GPIO_PCLK+0x138>)
 8000242:	4293      	cmp	r3, r2
 8000244:	d106      	bne.n	8000254 <GPIO_PCLK+0x80>
			GPIOE_PCLK_EN();
 8000246:	4b2d      	ldr	r3, [pc, #180]	; (80002fc <GPIO_PCLK+0x128>)
 8000248:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024a:	4a2c      	ldr	r2, [pc, #176]	; (80002fc <GPIO_PCLK+0x128>)
 800024c:	f043 0310 	orr.w	r3, r3, #16
 8000250:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000252:	e04b      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOH)
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	4a2e      	ldr	r2, [pc, #184]	; (8000310 <GPIO_PCLK+0x13c>)
 8000258:	4293      	cmp	r3, r2
 800025a:	d147      	bne.n	80002ec <GPIO_PCLK+0x118>
			GPIOH_PCLK_EN();
 800025c:	4b27      	ldr	r3, [pc, #156]	; (80002fc <GPIO_PCLK+0x128>)
 800025e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000260:	4a26      	ldr	r2, [pc, #152]	; (80002fc <GPIO_PCLK+0x128>)
 8000262:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000266:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000268:	e040      	b.n	80002ec <GPIO_PCLK+0x118>
		if(pGPIOx == GPIOA)
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	4a22      	ldr	r2, [pc, #136]	; (80002f8 <GPIO_PCLK+0x124>)
 800026e:	4293      	cmp	r3, r2
 8000270:	d106      	bne.n	8000280 <GPIO_PCLK+0xac>
			GPIOA_PCLK_DI();
 8000272:	4b22      	ldr	r3, [pc, #136]	; (80002fc <GPIO_PCLK+0x128>)
 8000274:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000276:	4a21      	ldr	r2, [pc, #132]	; (80002fc <GPIO_PCLK+0x128>)
 8000278:	f023 0301 	bic.w	r3, r3, #1
 800027c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027e:	e035      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOB)
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	4a1f      	ldr	r2, [pc, #124]	; (8000300 <GPIO_PCLK+0x12c>)
 8000284:	4293      	cmp	r3, r2
 8000286:	d106      	bne.n	8000296 <GPIO_PCLK+0xc2>
			GPIOB_PCLK_DI();
 8000288:	4b1c      	ldr	r3, [pc, #112]	; (80002fc <GPIO_PCLK+0x128>)
 800028a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028c:	4a1b      	ldr	r2, [pc, #108]	; (80002fc <GPIO_PCLK+0x128>)
 800028e:	f023 0302 	bic.w	r3, r3, #2
 8000292:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000294:	e02a      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOC)
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a1a      	ldr	r2, [pc, #104]	; (8000304 <GPIO_PCLK+0x130>)
 800029a:	4293      	cmp	r3, r2
 800029c:	d106      	bne.n	80002ac <GPIO_PCLK+0xd8>
			GPIOC_PCLK_DI();
 800029e:	4b17      	ldr	r3, [pc, #92]	; (80002fc <GPIO_PCLK+0x128>)
 80002a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a2:	4a16      	ldr	r2, [pc, #88]	; (80002fc <GPIO_PCLK+0x128>)
 80002a4:	f023 0304 	bic.w	r3, r3, #4
 80002a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002aa:	e01f      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOD)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4a16      	ldr	r2, [pc, #88]	; (8000308 <GPIO_PCLK+0x134>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d106      	bne.n	80002c2 <GPIO_PCLK+0xee>
			GPIOD_PCLK_DI();
 80002b4:	4b11      	ldr	r3, [pc, #68]	; (80002fc <GPIO_PCLK+0x128>)
 80002b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b8:	4a10      	ldr	r2, [pc, #64]	; (80002fc <GPIO_PCLK+0x128>)
 80002ba:	f023 0308 	bic.w	r3, r3, #8
 80002be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c0:	e014      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOE)
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a11      	ldr	r2, [pc, #68]	; (800030c <GPIO_PCLK+0x138>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d106      	bne.n	80002d8 <GPIO_PCLK+0x104>
			GPIOE_PCLK_DI();
 80002ca:	4b0c      	ldr	r3, [pc, #48]	; (80002fc <GPIO_PCLK+0x128>)
 80002cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ce:	4a0b      	ldr	r2, [pc, #44]	; (80002fc <GPIO_PCLK+0x128>)
 80002d0:	f023 0310 	bic.w	r3, r3, #16
 80002d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d6:	e009      	b.n	80002ec <GPIO_PCLK+0x118>
		}else if (pGPIOx == GPIOH)
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	4a0d      	ldr	r2, [pc, #52]	; (8000310 <GPIO_PCLK+0x13c>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	d105      	bne.n	80002ec <GPIO_PCLK+0x118>
			GPIOH_PCLK_DI();
 80002e0:	4b06      	ldr	r3, [pc, #24]	; (80002fc <GPIO_PCLK+0x128>)
 80002e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e4:	4a05      	ldr	r2, [pc, #20]	; (80002fc <GPIO_PCLK+0x128>)
 80002e6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80002ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ec:	bf00      	nop
 80002ee:	370c      	adds	r7, #12
 80002f0:	46bd      	mov	sp, r7
 80002f2:	bc80      	pop	{r7}
 80002f4:	4770      	bx	lr
 80002f6:	bf00      	nop
 80002f8:	40020000 	.word	0x40020000
 80002fc:	40023800 	.word	0x40023800
 8000300:	40020400 	.word	0x40020400
 8000304:	40020800 	.word	0x40020800
 8000308:	40020c00 	.word	0x40020c00
 800030c:	40021000 	.word	0x40021000
 8000310:	40021c00 	.word	0x40021c00

08000314 <GPIO_Init>:
 * @param[in]			-
 * @return				- none
 * @Note				- none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000314:	b480      	push	{r7}
 8000316:	b087      	sub	sp, #28
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;	//temp register
 800031c:	2300      	movs	r3, #0
 800031e:	617b      	str	r3, [r7, #20]

	//1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	795b      	ldrb	r3, [r3, #5]
 8000324:	2b03      	cmp	r3, #3
 8000326:	d820      	bhi.n	800036a <GPIO_Init+0x56>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	795b      	ldrb	r3, [r3, #5]
 800032c:	461a      	mov	r2, r3
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	791b      	ldrb	r3, [r3, #4]
 8000332:	005b      	lsls	r3, r3, #1
 8000334:	fa02 f303 	lsl.w	r3, r2, r3
 8000338:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 <<( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)) ;
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	681a      	ldr	r2, [r3, #0]
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	791b      	ldrb	r3, [r3, #4]
 8000344:	005b      	lsls	r3, r3, #1
 8000346:	2103      	movs	r1, #3
 8000348:	fa01 f303 	lsl.w	r3, r1, r3
 800034c:	43db      	mvns	r3, r3
 800034e:	4619      	mov	r1, r3
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	400a      	ands	r2, r1
 8000356:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	6819      	ldr	r1, [r3, #0]
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	697a      	ldr	r2, [r7, #20]
 8000364:	430a      	orrs	r2, r1
 8000366:	601a      	str	r2, [r3, #0]
 8000368:	e09f      	b.n	80004aa <GPIO_Init+0x196>
	}else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_FT)
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	795b      	ldrb	r3, [r3, #5]
 800036e:	2b04      	cmp	r3, #4
 8000370:	d116      	bne.n	80003a0 <GPIO_Init+0x8c>
		{
			EXTI->RTSR &= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000372:	4b9e      	ldr	r3, [pc, #632]	; (80005ec <GPIO_Init+0x2d8>)
 8000374:	689b      	ldr	r3, [r3, #8]
 8000376:	687a      	ldr	r2, [r7, #4]
 8000378:	7912      	ldrb	r2, [r2, #4]
 800037a:	4611      	mov	r1, r2
 800037c:	2201      	movs	r2, #1
 800037e:	408a      	lsls	r2, r1
 8000380:	4611      	mov	r1, r2
 8000382:	4a9a      	ldr	r2, [pc, #616]	; (80005ec <GPIO_Init+0x2d8>)
 8000384:	400b      	ands	r3, r1
 8000386:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000388:	4b98      	ldr	r3, [pc, #608]	; (80005ec <GPIO_Init+0x2d8>)
 800038a:	68db      	ldr	r3, [r3, #12]
 800038c:	687a      	ldr	r2, [r7, #4]
 800038e:	7912      	ldrb	r2, [r2, #4]
 8000390:	4611      	mov	r1, r2
 8000392:	2201      	movs	r2, #1
 8000394:	408a      	lsls	r2, r1
 8000396:	4611      	mov	r1, r2
 8000398:	4a94      	ldr	r2, [pc, #592]	; (80005ec <GPIO_Init+0x2d8>)
 800039a:	430b      	orrs	r3, r1
 800039c:	60d3      	str	r3, [r2, #12]
 800039e:	e034      	b.n	800040a <GPIO_Init+0xf6>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RT)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	795b      	ldrb	r3, [r3, #5]
 80003a4:	2b05      	cmp	r3, #5
 80003a6:	d116      	bne.n	80003d6 <GPIO_Init+0xc2>
		{
			EXTI->FTSR &= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003a8:	4b90      	ldr	r3, [pc, #576]	; (80005ec <GPIO_Init+0x2d8>)
 80003aa:	68db      	ldr	r3, [r3, #12]
 80003ac:	687a      	ldr	r2, [r7, #4]
 80003ae:	7912      	ldrb	r2, [r2, #4]
 80003b0:	4611      	mov	r1, r2
 80003b2:	2201      	movs	r2, #1
 80003b4:	408a      	lsls	r2, r1
 80003b6:	4611      	mov	r1, r2
 80003b8:	4a8c      	ldr	r2, [pc, #560]	; (80005ec <GPIO_Init+0x2d8>)
 80003ba:	400b      	ands	r3, r1
 80003bc:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003be:	4b8b      	ldr	r3, [pc, #556]	; (80005ec <GPIO_Init+0x2d8>)
 80003c0:	689b      	ldr	r3, [r3, #8]
 80003c2:	687a      	ldr	r2, [r7, #4]
 80003c4:	7912      	ldrb	r2, [r2, #4]
 80003c6:	4611      	mov	r1, r2
 80003c8:	2201      	movs	r2, #1
 80003ca:	408a      	lsls	r2, r1
 80003cc:	4611      	mov	r1, r2
 80003ce:	4a87      	ldr	r2, [pc, #540]	; (80005ec <GPIO_Init+0x2d8>)
 80003d0:	430b      	orrs	r3, r1
 80003d2:	6093      	str	r3, [r2, #8]
 80003d4:	e019      	b.n	800040a <GPIO_Init+0xf6>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RFT)
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	795b      	ldrb	r3, [r3, #5]
 80003da:	2b06      	cmp	r3, #6
 80003dc:	d115      	bne.n	800040a <GPIO_Init+0xf6>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003de:	4b83      	ldr	r3, [pc, #524]	; (80005ec <GPIO_Init+0x2d8>)
 80003e0:	68db      	ldr	r3, [r3, #12]
 80003e2:	687a      	ldr	r2, [r7, #4]
 80003e4:	7912      	ldrb	r2, [r2, #4]
 80003e6:	4611      	mov	r1, r2
 80003e8:	2201      	movs	r2, #1
 80003ea:	408a      	lsls	r2, r1
 80003ec:	4611      	mov	r1, r2
 80003ee:	4a7f      	ldr	r2, [pc, #508]	; (80005ec <GPIO_Init+0x2d8>)
 80003f0:	430b      	orrs	r3, r1
 80003f2:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003f4:	4b7d      	ldr	r3, [pc, #500]	; (80005ec <GPIO_Init+0x2d8>)
 80003f6:	689b      	ldr	r3, [r3, #8]
 80003f8:	687a      	ldr	r2, [r7, #4]
 80003fa:	7912      	ldrb	r2, [r2, #4]
 80003fc:	4611      	mov	r1, r2
 80003fe:	2201      	movs	r2, #1
 8000400:	408a      	lsls	r2, r1
 8000402:	4611      	mov	r1, r2
 8000404:	4a79      	ldr	r2, [pc, #484]	; (80005ec <GPIO_Init+0x2d8>)
 8000406:	430b      	orrs	r3, r1
 8000408:	6093      	str	r3, [r2, #8]
		}

		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	791b      	ldrb	r3, [r3, #4]
 800040e:	089b      	lsrs	r3, r3, #2
 8000410:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	791b      	ldrb	r3, [r3, #4]
 8000416:	f003 0303 	and.w	r3, r3, #3
 800041a:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	4a73      	ldr	r2, [pc, #460]	; (80005f0 <GPIO_Init+0x2dc>)
 8000422:	4293      	cmp	r3, r2
 8000424:	d024      	beq.n	8000470 <GPIO_Init+0x15c>
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	4a72      	ldr	r2, [pc, #456]	; (80005f4 <GPIO_Init+0x2e0>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d01d      	beq.n	800046c <GPIO_Init+0x158>
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	4a70      	ldr	r2, [pc, #448]	; (80005f8 <GPIO_Init+0x2e4>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d016      	beq.n	8000468 <GPIO_Init+0x154>
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	4a6f      	ldr	r2, [pc, #444]	; (80005fc <GPIO_Init+0x2e8>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d00f      	beq.n	8000464 <GPIO_Init+0x150>
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	4a6d      	ldr	r2, [pc, #436]	; (8000600 <GPIO_Init+0x2ec>)
 800044a:	4293      	cmp	r3, r2
 800044c:	d008      	beq.n	8000460 <GPIO_Init+0x14c>
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	4a6c      	ldr	r2, [pc, #432]	; (8000604 <GPIO_Init+0x2f0>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d101      	bne.n	800045c <GPIO_Init+0x148>
 8000458:	2307      	movs	r3, #7
 800045a:	e00a      	b.n	8000472 <GPIO_Init+0x15e>
 800045c:	2300      	movs	r3, #0
 800045e:	e008      	b.n	8000472 <GPIO_Init+0x15e>
 8000460:	2304      	movs	r3, #4
 8000462:	e006      	b.n	8000472 <GPIO_Init+0x15e>
 8000464:	2303      	movs	r3, #3
 8000466:	e004      	b.n	8000472 <GPIO_Init+0x15e>
 8000468:	2302      	movs	r3, #2
 800046a:	e002      	b.n	8000472 <GPIO_Init+0x15e>
 800046c:	2301      	movs	r3, #1
 800046e:	e000      	b.n	8000472 <GPIO_Init+0x15e>
 8000470:	2300      	movs	r3, #0
 8000472:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000474:	4b64      	ldr	r3, [pc, #400]	; (8000608 <GPIO_Init+0x2f4>)
 8000476:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000478:	4a63      	ldr	r2, [pc, #396]	; (8000608 <GPIO_Init+0x2f4>)
 800047a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800047e:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICRx[temp1] = portcode << ( temp2 * 4);
 8000480:	7c7a      	ldrb	r2, [r7, #17]
 8000482:	7cbb      	ldrb	r3, [r7, #18]
 8000484:	009b      	lsls	r3, r3, #2
 8000486:	fa02 f103 	lsl.w	r1, r2, r3
 800048a:	4a60      	ldr	r2, [pc, #384]	; (800060c <GPIO_Init+0x2f8>)
 800048c:	7cfb      	ldrb	r3, [r7, #19]
 800048e:	3302      	adds	r3, #2
 8000490:	f842 1023 	str.w	r1, [r2, r3, lsl #2]


		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000494:	4b55      	ldr	r3, [pc, #340]	; (80005ec <GPIO_Init+0x2d8>)
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	687a      	ldr	r2, [r7, #4]
 800049a:	7912      	ldrb	r2, [r2, #4]
 800049c:	4611      	mov	r1, r2
 800049e:	2201      	movs	r2, #1
 80004a0:	408a      	lsls	r2, r1
 80004a2:	4611      	mov	r1, r2
 80004a4:	4a51      	ldr	r2, [pc, #324]	; (80005ec <GPIO_Init+0x2d8>)
 80004a6:	430b      	orrs	r3, r1
 80004a8:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 80004aa:	2300      	movs	r3, #0
 80004ac:	617b      	str	r3, [r7, #20]

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	799b      	ldrb	r3, [r3, #6]
 80004b2:	461a      	mov	r2, r3
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	791b      	ldrb	r3, [r3, #4]
 80004b8:	005b      	lsls	r3, r3, #1
 80004ba:	fa02 f303 	lsl.w	r3, r2, r3
 80004be:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)) ;
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	689a      	ldr	r2, [r3, #8]
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	005b      	lsls	r3, r3, #1
 80004cc:	2103      	movs	r1, #3
 80004ce:	fa01 f303 	lsl.w	r3, r1, r3
 80004d2:	43db      	mvns	r3, r3
 80004d4:	4619      	mov	r1, r3
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	400a      	ands	r2, r1
 80004dc:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	6899      	ldr	r1, [r3, #8]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	697a      	ldr	r2, [r7, #20]
 80004ea:	430a      	orrs	r2, r1
 80004ec:	609a      	str	r2, [r3, #8]
	temp = 0;
 80004ee:	2300      	movs	r3, #0
 80004f0:	617b      	str	r3, [r7, #20]

	//3.configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	79db      	ldrb	r3, [r3, #7]
 80004f6:	461a      	mov	r2, r3
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	791b      	ldrb	r3, [r3, #4]
 80004fc:	005b      	lsls	r3, r3, #1
 80004fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000502:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)) ;
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	68da      	ldr	r2, [r3, #12]
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	791b      	ldrb	r3, [r3, #4]
 800050e:	005b      	lsls	r3, r3, #1
 8000510:	2103      	movs	r1, #3
 8000512:	fa01 f303 	lsl.w	r3, r1, r3
 8000516:	43db      	mvns	r3, r3
 8000518:	4619      	mov	r1, r3
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	400a      	ands	r2, r1
 8000520:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	68d9      	ldr	r1, [r3, #12]
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	697a      	ldr	r2, [r7, #20]
 800052e:	430a      	orrs	r2, r1
 8000530:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000532:	2300      	movs	r3, #0
 8000534:	617b      	str	r3, [r7, #20]

	//4.configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	7a1b      	ldrb	r3, [r3, #8]
 800053a:	461a      	mov	r2, r3
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	791b      	ldrb	r3, [r3, #4]
 8000540:	fa02 f303 	lsl.w	r3, r2, r3
 8000544:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) ;
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	685a      	ldr	r2, [r3, #4]
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	791b      	ldrb	r3, [r3, #4]
 8000550:	4619      	mov	r1, r3
 8000552:	2301      	movs	r3, #1
 8000554:	408b      	lsls	r3, r1
 8000556:	43db      	mvns	r3, r3
 8000558:	4619      	mov	r1, r3
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	400a      	ands	r2, r1
 8000560:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	6859      	ldr	r1, [r3, #4]
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	697a      	ldr	r2, [r7, #20]
 800056e:	430a      	orrs	r2, r1
 8000570:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000572:	2300      	movs	r3, #0
 8000574:	617b      	str	r3, [r7, #20]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTFN)
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	7a5b      	ldrb	r3, [r3, #9]
 800057a:	2b02      	cmp	r3, #2
 800057c:	d131      	bne.n	80005e2 <GPIO_Init+0x2ce>
	{
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	791b      	ldrb	r3, [r3, #4]
 8000582:	08db      	lsrs	r3, r3, #3
 8000584:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	791b      	ldrb	r3, [r3, #4]
 800058a:	f003 0307 	and.w	r3, r3, #7
 800058e:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF << (4 * temp2)) ;
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	7c3a      	ldrb	r2, [r7, #16]
 8000596:	3208      	adds	r2, #8
 8000598:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800059c:	7bfb      	ldrb	r3, [r7, #15]
 800059e:	009b      	lsls	r3, r3, #2
 80005a0:	220f      	movs	r2, #15
 80005a2:	fa02 f303 	lsl.w	r3, r2, r3
 80005a6:	43db      	mvns	r3, r3
 80005a8:	4618      	mov	r0, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	7c3a      	ldrb	r2, [r7, #16]
 80005b0:	4001      	ands	r1, r0
 80005b2:	3208      	adds	r2, #8
 80005b4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	7c3a      	ldrb	r2, [r7, #16]
 80005be:	3208      	adds	r2, #8
 80005c0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	7a5b      	ldrb	r3, [r3, #9]
 80005c8:	461a      	mov	r2, r3
 80005ca:	7bfb      	ldrb	r3, [r7, #15]
 80005cc:	009b      	lsls	r3, r3, #2
 80005ce:	fa02 f303 	lsl.w	r3, r2, r3
 80005d2:	4618      	mov	r0, r3
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	7c3a      	ldrb	r2, [r7, #16]
 80005da:	4301      	orrs	r1, r0
 80005dc:	3208      	adds	r2, #8
 80005de:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80005e2:	bf00      	nop
 80005e4:	371c      	adds	r7, #28
 80005e6:	46bd      	mov	sp, r7
 80005e8:	bc80      	pop	{r7}
 80005ea:	4770      	bx	lr
 80005ec:	40013c00 	.word	0x40013c00
 80005f0:	40020000 	.word	0x40020000
 80005f4:	40020400 	.word	0x40020400
 80005f8:	40020800 	.word	0x40020800
 80005fc:	40020c00 	.word	0x40020c00
 8000600:	40021000 	.word	0x40021000
 8000604:	40021c00 	.word	0x40021c00
 8000608:	40023800 	.word	0x40023800
 800060c:	40013800 	.word	0x40013800

08000610 <GPIO_Read>:
 * @param[in]			-
 * @return				- 0 or 1
 * @Note				-
 */
uint8_t GPIO_Read(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000610:	b480      	push	{r7}
 8000612:	b083      	sub	sp, #12
 8000614:	af00      	add	r7, sp, #0
 8000616:	6078      	str	r0, [r7, #4]
 8000618:	460b      	mov	r3, r1
 800061a:	70fb      	strb	r3, [r7, #3]
	return (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	691a      	ldr	r2, [r3, #16]
 8000620:	78fb      	ldrb	r3, [r7, #3]
 8000622:	fa22 f303 	lsr.w	r3, r2, r3
 8000626:	b2db      	uxtb	r3, r3
 8000628:	f003 0301 	and.w	r3, r3, #1
 800062c:	b2db      	uxtb	r3, r3
}
 800062e:	4618      	mov	r0, r3
 8000630:	370c      	adds	r7, #12
 8000632:	46bd      	mov	sp, r7
 8000634:	bc80      	pop	{r7}
 8000636:	4770      	bx	lr

08000638 <GPIO_Write>:
 * @param[in]			-
 * @return				-
 * @Note				-
 */
void GPIO_Write(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 8000638:	b480      	push	{r7}
 800063a:	b083      	sub	sp, #12
 800063c:	af00      	add	r7, sp, #0
 800063e:	6078      	str	r0, [r7, #4]
 8000640:	460b      	mov	r3, r1
 8000642:	70fb      	strb	r3, [r7, #3]
 8000644:	4613      	mov	r3, r2
 8000646:	70bb      	strb	r3, [r7, #2]
	if (Value == GPIO_PIN_SET)
 8000648:	78bb      	ldrb	r3, [r7, #2]
 800064a:	2b01      	cmp	r3, #1
 800064c:	d109      	bne.n	8000662 <GPIO_Write+0x2a>
	{
		pGPIOx->ODR |= (1 << PinNumber);
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	695b      	ldr	r3, [r3, #20]
 8000652:	78fa      	ldrb	r2, [r7, #3]
 8000654:	2101      	movs	r1, #1
 8000656:	fa01 f202 	lsl.w	r2, r1, r2
 800065a:	431a      	orrs	r2, r3
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	615a      	str	r2, [r3, #20]
	}else
	{
		pGPIOx->ODR &= ~(1 << PinNumber);
	}
}
 8000660:	e009      	b.n	8000676 <GPIO_Write+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber);
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	695b      	ldr	r3, [r3, #20]
 8000666:	78fa      	ldrb	r2, [r7, #3]
 8000668:	2101      	movs	r1, #1
 800066a:	fa01 f202 	lsl.w	r2, r1, r2
 800066e:	43d2      	mvns	r2, r2
 8000670:	401a      	ands	r2, r3
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	615a      	str	r2, [r3, #20]
}
 8000676:	bf00      	nop
 8000678:	370c      	adds	r7, #12
 800067a:	46bd      	mov	sp, r7
 800067c:	bc80      	pop	{r7}
 800067e:	4770      	bx	lr

08000680 <main>:
{
	for(uint32_t i =0; i < 1000000;i++);
}

int main(void)
{
 8000680:	b580      	push	{r7, lr}
 8000682:	b086      	sub	sp, #24
 8000684:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLED;
	GPIOLED.pGPIOx = GPIOA;
 8000686:	4b1d      	ldr	r3, [pc, #116]	; (80006fc <main+0x7c>)
 8000688:	60fb      	str	r3, [r7, #12]
	GPIOLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800068a:	2305      	movs	r3, #5
 800068c:	743b      	strb	r3, [r7, #16]
	GPIOLED.GPIO_PinConfig.GPIO_PinMode =GPIO_MODE_OUT;
 800068e:	2301      	movs	r3, #1
 8000690:	747b      	strb	r3, [r7, #17]
	GPIOLED.GPIO_PinConfig.GPIO_PinSpeed =GPIO_SPEED_LOW;
 8000692:	2300      	movs	r3, #0
 8000694:	74bb      	strb	r3, [r7, #18]
	GPIOLED.GPIO_PinConfig.GPIO_PinOPType =GPIO_OP_TYPE_PP;
 8000696:	2300      	movs	r3, #0
 8000698:	753b      	strb	r3, [r7, #20]
	GPIOLED.GPIO_PinConfig.GPIO_PinPuPdControl =GPIO_NO_PUPD;
 800069a:	2300      	movs	r3, #0
 800069c:	74fb      	strb	r3, [r7, #19]

	GPIO_Handle_t GPIOBUTTON;
	GPIOBUTTON.pGPIOx = GPIOC;
 800069e:	4b18      	ldr	r3, [pc, #96]	; (8000700 <main+0x80>)
 80006a0:	603b      	str	r3, [r7, #0]
	GPIOBUTTON.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80006a2:	230d      	movs	r3, #13
 80006a4:	713b      	strb	r3, [r7, #4]
	GPIOBUTTON.GPIO_PinConfig.GPIO_PinMode =GPIO_MODE_IN;
 80006a6:	2300      	movs	r3, #0
 80006a8:	717b      	strb	r3, [r7, #5]
	GPIOBUTTON.GPIO_PinConfig.GPIO_PinSpeed =GPIO_SPEED_LOW;
 80006aa:	2300      	movs	r3, #0
 80006ac:	71bb      	strb	r3, [r7, #6]
	GPIOBUTTON.GPIO_PinConfig.GPIO_PinPuPdControl =GPIO_NO_PUPD;
 80006ae:	2300      	movs	r3, #0
 80006b0:	71fb      	strb	r3, [r7, #7]

	GPIO_PCLK(GPIOA, ENABLE);
 80006b2:	2101      	movs	r1, #1
 80006b4:	4811      	ldr	r0, [pc, #68]	; (80006fc <main+0x7c>)
 80006b6:	f7ff fd8d 	bl	80001d4 <GPIO_PCLK>
	GPIO_PCLK(GPIOC, ENABLE);
 80006ba:	2101      	movs	r1, #1
 80006bc:	4810      	ldr	r0, [pc, #64]	; (8000700 <main+0x80>)
 80006be:	f7ff fd89 	bl	80001d4 <GPIO_PCLK>
	GPIO_Init(&GPIOLED);
 80006c2:	f107 030c 	add.w	r3, r7, #12
 80006c6:	4618      	mov	r0, r3
 80006c8:	f7ff fe24 	bl	8000314 <GPIO_Init>
	GPIO_Init(&GPIOBUTTON);
 80006cc:	463b      	mov	r3, r7
 80006ce:	4618      	mov	r0, r3
 80006d0:	f7ff fe20 	bl	8000314 <GPIO_Init>

	while(1)
	{
		if(!(GPIO_Read(GPIOC, GPIO_PIN_NO_13)))
 80006d4:	210d      	movs	r1, #13
 80006d6:	480a      	ldr	r0, [pc, #40]	; (8000700 <main+0x80>)
 80006d8:	f7ff ff9a 	bl	8000610 <GPIO_Read>
 80006dc:	4603      	mov	r3, r0
 80006de:	2b00      	cmp	r3, #0
 80006e0:	d105      	bne.n	80006ee <main+0x6e>
		{
			GPIO_Write(GPIOA, GPIO_PIN_NO_5, SET);
 80006e2:	2201      	movs	r2, #1
 80006e4:	2105      	movs	r1, #5
 80006e6:	4805      	ldr	r0, [pc, #20]	; (80006fc <main+0x7c>)
 80006e8:	f7ff ffa6 	bl	8000638 <GPIO_Write>
 80006ec:	e7f2      	b.n	80006d4 <main+0x54>
		}else
		{
			GPIO_Write(GPIOA, GPIO_PIN_NO_5, RESET);
 80006ee:	2200      	movs	r2, #0
 80006f0:	2105      	movs	r1, #5
 80006f2:	4802      	ldr	r0, [pc, #8]	; (80006fc <main+0x7c>)
 80006f4:	f7ff ffa0 	bl	8000638 <GPIO_Write>
		if(!(GPIO_Read(GPIOC, GPIO_PIN_NO_13)))
 80006f8:	e7ec      	b.n	80006d4 <main+0x54>
 80006fa:	bf00      	nop
 80006fc:	40020000 	.word	0x40020000
 8000700:	40020800 	.word	0x40020800

08000704 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000704:	480d      	ldr	r0, [pc, #52]	; (800073c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000706:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000708:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800070c:	480c      	ldr	r0, [pc, #48]	; (8000740 <LoopForever+0x6>)
  ldr r1, =_edata
 800070e:	490d      	ldr	r1, [pc, #52]	; (8000744 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000710:	4a0d      	ldr	r2, [pc, #52]	; (8000748 <LoopForever+0xe>)
  movs r3, #0
 8000712:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000714:	e002      	b.n	800071c <LoopCopyDataInit>

08000716 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000716:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000718:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800071a:	3304      	adds	r3, #4

0800071c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800071c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800071e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000720:	d3f9      	bcc.n	8000716 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000722:	4a0a      	ldr	r2, [pc, #40]	; (800074c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000724:	4c0a      	ldr	r4, [pc, #40]	; (8000750 <LoopForever+0x16>)
  movs r3, #0
 8000726:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000728:	e001      	b.n	800072e <LoopFillZerobss>

0800072a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800072a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800072c:	3204      	adds	r2, #4

0800072e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800072e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000730:	d3fb      	bcc.n	800072a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000732:	f000 f811 	bl	8000758 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000736:	f7ff ffa3 	bl	8000680 <main>

0800073a <LoopForever>:

LoopForever:
    b LoopForever
 800073a:	e7fe      	b.n	800073a <LoopForever>
  ldr   r0, =_estack
 800073c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000740:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000744:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000748:	080007c0 	.word	0x080007c0
  ldr r2, =_sbss
 800074c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000750:	2000001c 	.word	0x2000001c

08000754 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000754:	e7fe      	b.n	8000754 <ADC_IRQHandler>
	...

08000758 <__libc_init_array>:
 8000758:	b570      	push	{r4, r5, r6, lr}
 800075a:	4d0d      	ldr	r5, [pc, #52]	; (8000790 <__libc_init_array+0x38>)
 800075c:	4c0d      	ldr	r4, [pc, #52]	; (8000794 <__libc_init_array+0x3c>)
 800075e:	1b64      	subs	r4, r4, r5
 8000760:	10a4      	asrs	r4, r4, #2
 8000762:	2600      	movs	r6, #0
 8000764:	42a6      	cmp	r6, r4
 8000766:	d109      	bne.n	800077c <__libc_init_array+0x24>
 8000768:	4d0b      	ldr	r5, [pc, #44]	; (8000798 <__libc_init_array+0x40>)
 800076a:	4c0c      	ldr	r4, [pc, #48]	; (800079c <__libc_init_array+0x44>)
 800076c:	f000 f818 	bl	80007a0 <_init>
 8000770:	1b64      	subs	r4, r4, r5
 8000772:	10a4      	asrs	r4, r4, #2
 8000774:	2600      	movs	r6, #0
 8000776:	42a6      	cmp	r6, r4
 8000778:	d105      	bne.n	8000786 <__libc_init_array+0x2e>
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000780:	4798      	blx	r3
 8000782:	3601      	adds	r6, #1
 8000784:	e7ee      	b.n	8000764 <__libc_init_array+0xc>
 8000786:	f855 3b04 	ldr.w	r3, [r5], #4
 800078a:	4798      	blx	r3
 800078c:	3601      	adds	r6, #1
 800078e:	e7f2      	b.n	8000776 <__libc_init_array+0x1e>
 8000790:	080007b8 	.word	0x080007b8
 8000794:	080007b8 	.word	0x080007b8
 8000798:	080007b8 	.word	0x080007b8
 800079c:	080007bc 	.word	0x080007bc

080007a0 <_init>:
 80007a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007a2:	bf00      	nop
 80007a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007a6:	bc08      	pop	{r3}
 80007a8:	469e      	mov	lr, r3
 80007aa:	4770      	bx	lr

080007ac <_fini>:
 80007ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ae:	bf00      	nop
 80007b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007b2:	bc08      	pop	{r3}
 80007b4:	469e      	mov	lr, r3
 80007b6:	4770      	bx	lr
